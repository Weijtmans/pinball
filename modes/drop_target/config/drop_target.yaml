#config_version=6
##! mode: drop_target

# NOTES:
# In MPF you can only reset a bank with a single coil and individually knock down targets with separate coils
# We want to achieve the exact opposite, so we are using a workaround
# - cmd_knock_down_bank: triggers bank reset
# - cmd_drop_target_top_1_reset: triggers drop target knockdown
# The switches are reversed in software, so the switch is active when the target is up
# So we are programming everything in reverse as a workaround to make it work

mode:
  start_events: sw_launch_active
  stop_events: ball_will_end
  priority: 500

# State machine to manage game progression
state_machines:
  drop_sequence:
    states:
      start:
        label: Initiate drop target sequence
        events_when_started:
          # Knock down all targets
          - cmd_drop_target_bank_top_reset
      stage_1:
        label: Target 3 up (stage 1)
        events_when_started: 
          - cmd_drop_target_top_3_knockdown
          - cmd_entered_stage_1
      stage_2:
        label: Targets 2 and 4 up (stage 2)
        events_when_started: 
          - cmd_drop_target_top_2_knockdown
          - cmd_drop_target_top_4_knockdown
          - cmd_entered_stage_2
      stage_3:
        label: Targets 1, 3, and 5 up (stage 3)
        events_when_started:
          - cmd_drop_target_top_1_knockdown
          - cmd_drop_target_top_3_knockdown
          - cmd_drop_target_top_5_knockdown
          - cmd_entered_stage_3
      stage_4:
        label: Targets 1, 2, 4, and 5 up (stage 4)
        events_when_started:
          - cmd_drop_target_top_1_knockdown
          - cmd_drop_target_top_2_knockdown
          - cmd_drop_target_top_4_knockdown
          - cmd_drop_target_top_5_knockdown
          - cmd_entered_stage_4
      stage_5:
        label: Targets 1, 2, 3, 4, and 5 up (stage 5)
        events_when_started:
          - cmd_drop_target_top_1_knockdown
          - cmd_drop_target_top_2_knockdown
          - cmd_drop_target_top_3_knockdown
          - cmd_drop_target_top_4_knockdown
          - cmd_drop_target_top_5_knockdown
          - cmd_entered_stage_5
    transitions:
      - source: start
        target: stage_1
        events: prepare_stage_1
      - source: stage_1
        target: stage_2
        events: cmd_3_up
      - source: stage_2
        target: stage_3
        events: cmd_2_and_4_up
      - source: stage_3
        target: stage_4
        events: cmd_1_3_and_5_up
      - source: stage_4
        target: stage_5
        events: cmd_1_2_4_and_5_up
      - source: stage_5
        target: stage_1
        events: cmd_1_2_3_4_and_5_up

# Event player to handle drop target control
event_player:
  mode_drop_target_started: 
    - prepare_stage_1

accruals:
  3_up:
    events:
      - drop_target_d_top_3_up{current_player.drop_target_stage == 1}
    events_when_complete: cmd_3_up
    reset_on_complete: true
    disable_on_complete: false
  2_and_4_up:
    events:
      - drop_target_d_top_2_up{current_player.drop_target_stage == 2}
      - drop_target_d_top_4_up{current_player.drop_target_stage == 2}
    events_when_complete: cmd_2_and_4_up
    reset_on_complete: true
    disable_on_complete: false
  1_3_and_5_up:
    events:
      - drop_target_d_top_1_up{current_player.drop_target_stage == 3}
      - drop_target_d_top_3_up{current_player.drop_target_stage == 3}
      - drop_target_d_top_5_up{current_player.drop_target_stage == 3}
    events_when_complete: cmd_1_3_and_5_up
    reset_on_complete: true
    disable_on_complete: false
  1_2_4_and_5_up:
    events:
      - drop_target_d_top_1_up{current_player.drop_target_stage == 4}
      - drop_target_d_top_2_up{current_player.drop_target_stage == 4}
      - drop_target_d_top_4_up{current_player.drop_target_stage == 4}
      - drop_target_d_top_5_up{current_player.drop_target_stage == 4}
    events_when_complete: cmd_1_2_4_and_5_up
    reset_on_complete: true
    disable_on_complete: false
  1_2_3_4_and_5_up:
    events:
      - drop_target_d_top_1_up{current_player.drop_target_stage == 5}
      - drop_target_d_top_2_up{current_player.drop_target_stage == 5}
      - drop_target_d_top_3_up{current_player.drop_target_stage == 5}
      - drop_target_d_top_4_up{current_player.drop_target_stage == 5}
      - drop_target_d_top_5_up{current_player.drop_target_stage == 5}
    events_when_complete: cmd_1_2_3_4_and_5_up
    reset_on_complete: true
    disable_on_complete: false

variable_player:
  cmd_entered_stage_1:
    drop_target_stage:
      int: 1
      action: set
    score: 100
  cmd_entered_stage_2:
    drop_target_stage:
      int: 2
      action: set
    score: 200
  cmd_entered_stage_3:
    drop_target_stage:
      int: 3
      action: set
    score: 300
  cmd_entered_stage_4:
    drop_target_stage:
      int: 4
      action: set
    score: 400
  cmd_entered_stage_5:
    drop_target_stage:
      int: 5
      action: set
    score: 500
  cmd_completed_sequence:
    drop_target_stage:
      int: 0
      action: set
  cmd_1_2_3_4_and_5_up:
    score: 10000

sound_player:
  # Sound (voice) when completing the drop target sequence
  cmd_1_2_3_4_and_5_up:
    unbelievable:
      loops: 0
